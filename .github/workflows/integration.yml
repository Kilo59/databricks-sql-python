name: Integration Tests
on:
  push
jobs:
  run-integration-tests:
    runs-on: ubuntu-latest
    environment: azure-prod-pecou
    strategy:
      matrix:
        # python-version: [3.7, 3.8, 3.9, "3.10", "3.11"]
          python-version: [3.7, 3.8]
    env:
      host: ${{ secrets.DATABRICKS_HOST }}
      access_token: ${{ secrets.DATABRICKS_TOKEN }}
      http_path: ${{ secrets.TEST_PECO_WAREHOUSE_HTTP_PATH }}
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ github.event.repository.name }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install library
        run: poetry install --no-interaction
      #----------------------------------------------
      #              run test suite
      #----------------------------------------------
      - name: Run CoreTestSuite 
        run: poetry run python -m pytest tests/e2e/driver_tests.py::PySQLCoreTestSuite